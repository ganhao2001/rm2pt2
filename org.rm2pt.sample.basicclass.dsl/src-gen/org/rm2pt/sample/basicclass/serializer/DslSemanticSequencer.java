/*
 * generated by Xtext 2.25.0
 */
package org.rm2pt.sample.basicclass.serializer;

import com.google.inject.Inject;
import java.util.Set;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Parameter;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.serializer.ISerializationContext;
import org.eclipse.xtext.serializer.sequencer.AbstractDelegatingSemanticSequencer;
import org.rm2pt.sample.basicclass.metamodel.basicclass.BasicclassPackage;
import org.rm2pt.sample.basicclass.metamodel.basicclass.Student;
import org.rm2pt.sample.basicclass.metamodel.basicclass.Teacher;
import org.rm2pt.sample.basicclass.services.DslGrammarAccess;

@SuppressWarnings("all")
public class DslSemanticSequencer extends AbstractDelegatingSemanticSequencer {

	@Inject
	private DslGrammarAccess grammarAccess;
	
	@Override
	public void sequence(ISerializationContext context, EObject semanticObject) {
		EPackage epackage = semanticObject.eClass().getEPackage();
		ParserRule rule = context.getParserRule();
		Action action = context.getAssignedAction();
		Set<Parameter> parameters = context.getEnabledBooleanParameters();
		if (epackage == BasicclassPackage.eINSTANCE)
			switch (semanticObject.eClass().getClassifierID()) {
			case BasicclassPackage.CLASS:
				sequence_Class(context, (org.rm2pt.sample.basicclass.metamodel.basicclass.Class) semanticObject); 
				return; 
			case BasicclassPackage.STUDENT:
				sequence_Student(context, (Student) semanticObject); 
				return; 
			case BasicclassPackage.TEACHER:
				sequence_Teacher(context, (Teacher) semanticObject); 
				return; 
			}
		if (errorAcceptor != null)
			errorAcceptor.accept(diagnosticProvider.createInvalidContextOrTypeDiagnostic(semanticObject, context));
	}
	
	/**
	 * Contexts:
	 *     Class returns Class
	 *
	 * Constraint:
	 *     (name=EString (members+=Person members+=Person*)?)
	 */
	protected void sequence_Class(ISerializationContext context, org.rm2pt.sample.basicclass.metamodel.basicclass.Class semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     Person returns Student
	 *     Student returns Student
	 *
	 * Constraint:
	 *     (name=EString (students+=[Person|EString] students+=[Person|EString]*)? (teachers+=[Person|EString] teachers+=[Person|EString]*)?)
	 */
	protected void sequence_Student(ISerializationContext context, Student semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     Person returns Teacher
	 *     Teacher returns Teacher
	 *
	 * Constraint:
	 *     (name=EString (students+=[Person|EString] students+=[Person|EString]*)? (teachers+=[Person|EString] teachers+=[Person|EString]*)?)
	 */
	protected void sequence_Teacher(ISerializationContext context, Teacher semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
}
